# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
  id: ID!
  name: String!
  description: String!
  image:String!
}

type Hangout{
  id: ID!
  user_id: ID!
  name: String! 
}

type Schedule{
  id: ID!
  user_id: ID!
  date: String!
}

type Friend{
  id: ID!
  user_id: ID!
  friend_id: ID!
  accept: Boolean!
}

type Matching{
  friend_id:ID!
}

type Query {
  getUserById(id: ID!): User!
  getHangoutsByUserId(user_id: ID!): [Hangout!]!
  getSchedulesByUserId(user_id: ID!):[Schedule!]!
  getFriendsByUserId(user_id: ID!):[Friend!]!
  getMatchings(user_id:ID!):[Matching!]!
}

input CreateUserInput {
  id: ID!
  name: String!
  description: String!
  image:String!
}

input UpdateUserInput {
  id: ID!
  name: String!
  description: String!
  image:String!
}

input CreateHangoutInput{
  user_id: ID!
  name: String!
}

input UpdateHangoutInput{
  id: ID!
  user_id:ID!
  name: String!
}

input DeleteHangoutInput{
  id: ID!
}

input CreateScheduleInput{
  user_id: ID!
  date: String!
}

input UpdateScheduleInput{
  id: ID!
  user_id:ID!
  date: String!
}

input DeleteScheduleInput{
  id: ID!
}

input CreateFriendInput{
  user_id: ID!
  friend_id:ID!
}

input UpdateFriendAcceptInput{
  id: ID!
  user_id: ID!
  friend_id: ID!
  accept: Boolean!
}

input DeleteFriendInput{
  id: ID!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!

  createHangout(input: CreateHangoutInput!): Hangout!
  updateHangout(input: UpdateHangoutInput!): Hangout!
  deleteHangout(input: DeleteHangoutInput!): Hangout!

  createSchedule(input: CreateScheduleInput!): Schedule!
  updateSchedule(input: UpdateScheduleInput!): Schedule!
  deleteSchedule(input: DeleteScheduleInput!): Schedule!

  createFriend(input: CreateFriendInput): Friend!
  updateFriendAccept(input: UpdateFriendAcceptInput): Friend!
  deleteFriend(input: DeleteFriendInput): Friend!
}

